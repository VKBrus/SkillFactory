- hosts: all
  become: yes
  tasks:
   - name: Install packages that allow apt to be used over HTTPS
     apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
     vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - software-properties-common
      - acl

   - name: Set up the repository fo Docker
     shell: "{{ item }}"
     with_items:
       - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
       - echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      
   - name: Install Docker and its dependecies
     apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
     vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
     notify:
      - docker status

   - name: Add bob user to docker group
     user:
      name: bob
      state: present
      group: docker
   
   - name: Edit Docker config
     lineinfile: 
      path: /lib/systemd/system/docker.service
      regexp: 'ExecStart=\/usr\/bin\/dockerd -H fd:\/\/ --containerd=\/run\/containerd\/containerd.sock' 
      line: 'ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd'
      backrefs: yes

   - name: Reload and reboot Docker
     shell: "{{ item }}"
     with_items:
      - systemctl daemon-reload
      - systemctl restart docker

   - name: Add Kubernetes apt-key
     apt_key:
       url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
       state: present

   - name: Add Kubernetes' APT repository
     apt_repository:
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: 'kubernetes'

   - name: Install kubelet
     apt:
      name: kubelet
      state: present
      update_cache: true

   - name: Install kubeadm
     apt:
       name: kubeadm
       state: present

  handlers:
    - name: Docker status
      service: name=docker state=started

- hosts: master
  become: yes
  tasks:
   - name: Install kubectl
     apt:
       name: kubectl
       state: present
       force: yes
